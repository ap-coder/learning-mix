version: 0.2

phases:
  install: 
    runtime-versions:
      php: 8.0
      nodejs: latest
  pre_build: # commands to be run before build
    commands:
    - echo Logging in to Amazon ECR....
    - aws --version
    # login to Elastic container registry
    - eval $(aws ecr get-login --region us-east-1 --no-include-email | sed 's|https://||')
    - REPOSITORY_URI=244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www
    - IMAGE_TAG=1.0
  build:
    commands:
    - apt-get update -y
    - apt-get install -y lsb-release ca-certificates apt-transport-https software-properties-common
    - add-apt-repository ppa:ondrej/php
    - add-apt-repository ppa:ondrej/apache2
    - service --status-all
    - echo INSTALLING PHP MODULES THAT ARE NEEDED
    - apt-get install -y php8.0-imap php8.0-imap php8.0-mysql php8.0-redis php8.0-gd php8.0-curl php8.0-snmp php8.0-xml php8.0-zip php8.0-mbstring
    - apt-get install -y libmagickwand-dev --no-install-recommends
    - apt-get install -y php8.0-imagick
    - echo INSTALLING COMPOSER
    - curl -s https://getcomposer.org/installer | php
    - mv composer.phar /usr/local/bin/composer
    - php --version
    - php -m  
    - echo BUILD STARTED ON `date`
    - echo CREATING .env FILE..
    - cp .env.example .env
    - echo GENERATING APP KEY
    - php artisan key:generate
    - echo BUILDING THE DOCKER IMAGE...
    - docker build -t $REPOSITORY_URI:latest .
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push $REPOSITORY_URI:$IMAGE_TAG
version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.0
    commands:
      - . codebuild_nvm_wrapper.sh
      - npm install
      - node -v
      - echo BUILD STARTED ON `date`
      - apt-get update -y
      - apt-get install -y libpq-dev libzip-dev
      - apt-get install -y lsb-release ca-certificates apt-transport-https software-properties-common
      - add-apt-repository ppa:ondrej/php
      - add-apt-repository ppa:ondrej/apache2
      - service --status-all
    finally:
      - echo INSTALLING PHP MODULES THAT ARE NEEDED
      - apt-get install -y php8.0-imap php8.0-imap php8.0-mysql php8.0-redis php8.0-gd php8.0-curl php8.0-snmp php8.0-xml php8.0-zip php8.0-mbstring
      - apt-get install -y libmagickwand-dev --no-install-recommends
      - apt-get install -y php8.0-imagick
      - update-alternatives --set php /usr/bin/php8.0
      - echo INSTALLING COMPOSER
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      - chown -R www-data:www-data $CODEBUILD_SRC_DIR/storage
      - chmod -R 755 $CODEBUILD_SRC_DIR/storage
  pre_build: # commands to be run before build
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      # login to Elastic container registry
      - eval $(aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 244799856984.dkr.ecr.us-west-2.amazonaws.com | sed 's|https://||')
      - REPOSITORY_URI=244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www
      - IMAGE_TAG=1.0
      - echo CREATING .env FILE..
      - cp .env.example .env
      - echo CHECKING PHP VERSION AND MODULES
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
      - nvm install
      - php --version
      - php -m
      - php artisan
      - echo GENERATING APP KEY
      - php artisan key:generate
      - pwd
      - ls -l
      - composer install -nW
      - composer dump-auto
  build:
    commands:
      - echo BUILDING THE DOCKER IMAGE...
      - docker build -t temp-www .
      - docker tag temp-www:latest 244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www:latest
      - echo RUNNING COMPOSER INSTALL
  post_build:
    commands:
      - printenv
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push 244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www:latest
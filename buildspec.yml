version: 0.2
phases:
  install:
    runtime-versions:
      php: 8.0
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - echo Build started on `date`
      # login to Elastic container registry
      - eval $(aws ecr get-login --region us-west-2 --no-include-email | sed 's|https://||')
      - REPOSITORY_URI=244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www
      # - IMAGE_TAG=1.0
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo $REPOSITORY_URI
      - echo $COMMIT_HASH
      - echo $IMAGE_TAG
      - yum -y install amazon-ecr-credential-helper
      - php --version
      - php -m
      - php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer
      - apt-get -y install mlocate
  build:
    commands:
      # - echo $REPOSITORY_URI
      # - echo $IMAGE_TAG
      - echo Installing composer deps
      - composer install --no-progress --no-suggest
      - echo CREATING .env FILE..
      - cp .env.example .env
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG.${CODEBUILD_BUILD_NUMBER}
  post_build:
    commands:
      - aws --version
      - eval $(aws ecr get-login --no-include-email --region us-west-2)
      # - echo Printing ecr log
      # - cat ./.ecr/log/*
      - echo $user
      - echo Pushing the Docker image...
      # - docker image ls -a
      # - echo $REPOSITORY_URI
      # - echo $IMAGE_TAG
      # - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION}
      # - echo ${CODEBUILD_BUILD_NUMBER}
      - docker push $REPOSITORY_URI:$IMAGE_TAG.${CODEBUILD_BUILD_NUMBER}
      - echo Build completed on `date`

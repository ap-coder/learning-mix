version: 0.2
phases:
  install:
    runtime-versions:
      php: 8.0
      nodejs: 14
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - echo Build started on `date`
      # login to Elastic container registry
      - eval $(aws ecr get-login --region us-east-1 --no-include-email | sed 's|https://||')
      - REPOSITORY_URI=244799856984.dkr.ecr.us-west-2.amazonaws.com/temp-www
      - IMAGE_TAG=1.0
      - |
        export DEBIAN_FRONTEND=noninteractive
        #Install php8.0
        apt-get update
        apt-get install -y  software-properties-common
        add-apt-repository -y ppa:ondrej/php
        apt-get update

        # Install PHP
      - apt-get install -y php8.0-gd php8.0-ldap php8.0-odbc php8.0-readline \
        php8.0-xsl php8.0-apcu php8.0-curl php8.0-gmp php8.0-mailparse php8.0-opcache php8.0-redis php8.0-sybase \
        php8.0-yac php8.0-ast php8.0-dba php8.0-igbinary php8.0-mbstring php8.0-rrd php8.0-tidy php8.0-yaml \
        php8.0-bcmath php8.0-dev php8.0-imagick php8.0-phpdbg php8.0-smbclient php8.0-uuid php8.0-zip \
        php8.0-bz2 php8.0-ds php8.0-imap php8.0-msgpack php8.0-pspell php8.0-snmp php8.0-xdebug php8.0-zmq php8.0-cgi \
        php8.0-enchant php8.0-interbase php8.0-mysql php8.0-psr \
        php8.0-intl php8.0-oauth php8.0-raphf php8.0-solr php8.0-xml

      - php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer

      - curl -sL https://deb.nodesource.com/setup_16.x | bash - \
        && apt-get -y install nodejs mlocate \
        && apt-get -y autoremove \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
  build:
    commands:
      - echo Installing composer deps
      - composer install --no-progress --no-suggest
      - echo CREATING .env FILE..
      - cp .env.example .env
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker image ls -a